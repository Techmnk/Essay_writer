{"version":3,"sources":["Displaywatch.js","Stopwatch_Btn.js","Text_time.js","Api_fetch.js","App.js","reportWebVitals.js","index.js"],"names":["Displaywatch","props","time","m","s","ms","Stopwatch_Btn","status","className","onClick","start","stop","reset","resume","Text_time","useState","count","setcount","para","setpara","sent","setsent","char","setchar","del","setdel","setTime","interv","setInterv","setStatus","run","setInterval","updatedMs","updatedS","updatedM","cal","onKeyDown","e","keyCode","onChange","withOutSpace","target","value","replace","numWords","split","filter","item","numParas","numSent","length","class","id","rows","color","progress","aria-valuenow","aria-valuemin","aria-valuemax","style","width","clearInterval","push","x","data","topic","Math","floor","random","document","getElementById","innerHTML","Api_fetch","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b93ec4e5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nfunction Displaywatch(props) {\r\n    \r\n    return (\r\n        <div>\r\n            <span>{(props.time.m >= 10) ? props.time.m : \"0\" + props.time.m}</span>&nbsp;:&nbsp;\r\n            <span>{(props.time.s >= 10) ? props.time.s : \"0\" + props.time.s}</span>&nbsp;:&nbsp;\r\n            <span>{(props.time.ms >= 10) ? props.time.ms : \"0\" + props.time.ms}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Displaywatch;","import React from 'react';\r\n\r\nfunction Stopwatch_Btn(props) {\r\n    return (\r\n        <div>\r\n            {(props.status === 0) ?\r\n                <button className=\"stopwatch-btn btn btn-outline-info btn-sm\"\r\n                    onClick={props.start}>Start</button> : \"\"\r\n            }\r\n\r\n            {(props.status === 1) ?\r\n                <div>\r\n                    <button className=\"stopwatch-btn btn btn-outline-danger btn-sm\"\r\n                        onClick={props.stop}>Stop</button>\r\n                    <button className=\"stopwatch-btn btn btn-outline-warning btn-sm\"\r\n                        onClick={props.reset}>Reset</button>\r\n                </div> : \"\"\r\n            }\r\n\r\n            {(props.status === 2) ?\r\n                <div>\r\n                    <button className=\"stopwatch-btn btn btn-outline-info btn-sm\"\r\n                        onClick={props.resume}>Resume</button>\r\n                    <button className=\"stopwatch-btn btn btn-outline-warning btn-sm\"\r\n                        onClick={props.reset}>Reset</button>\r\n                </div> : \"\"\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Stopwatch_Btn;","import React, { useState } from 'react';\r\nimport Displaywatch from './Displaywatch';\r\nimport Stopwatch_Btn from './Stopwatch_Btn';\r\nimport \"./Text_time.css\"\r\n\r\n\r\nfunction Text_time() {\r\n    const [count, setcount] = useState(0)\r\n    const [para, setpara] = useState(0)\r\n    const [sent, setsent] = useState(0)\r\n    const [char, setchar] = useState(0)\r\n    const [del, setdel] = useState(0)\r\n    const [time, setTime] = useState({ ms: 0, s: 0, m: 0});\r\n    const [interv, setInterv] = useState();\r\n    const [status, setStatus] = useState(0);\r\n    // Not started = 0\r\n    // started = 1\r\n    // stopped = 2\r\n\r\n    const start = () => {\r\n        run();\r\n        setStatus(1);\r\n        setInterv(setInterval(run, 10));\r\n    };\r\n\r\n    var updatedMs = time.ms, updatedS = time.s, updatedM = time.m;\r\n\r\n    const run = () => {\r\n        if (updatedM === 60) {\r\n            updatedM = 0;\r\n        }\r\n        if (updatedS === 60) {\r\n            updatedM++;\r\n            updatedS = 0;\r\n        }\r\n        if (updatedMs === 100) {\r\n            updatedS++;\r\n            updatedMs = 0;\r\n        }\r\n        updatedMs++;\r\n        return setTime({ ms: updatedMs, s: updatedS, m: updatedM});\r\n    };\r\n\r\n    const stop = () => {\r\n        clearInterval(interv);\r\n        setStatus(2);\r\n    };\r\n\r\n    const reset = () => {\r\n        clearInterval(interv);\r\n        setStatus(0);\r\n        setTime({ ms: 0, s: 0, m: 0})\r\n    };\r\n\r\n    const resume = () => start();\r\n\r\n\r\n    // var counterstart = (function () {\r\n    //     var executed = false;\r\n    //     return function () {\r\n    //         if (!executed) {\r\n    //             executed = true;\r\n    //             if (count === 1) {\r\n    //                 start()\r\n\r\n    //             }\r\n    //         }\r\n    //     };\r\n    // })();\r\n\r\n\r\n    const getWordCount = (e) => {\r\n\r\n        // const chars = e.target.value.split(\"\").filter(item => {\r\n        //     return item !== \"\";\r\n        // });\r\n\r\n        const withOutSpace = e.target.value.replace(/\\s+/g, '');\r\n\r\n        const numWords = e.target.value.split(\" \").filter(item => {\r\n            return item !== \"\";\r\n        });\r\n\r\n        const numParas = e.target.value.split(/\\r?\\n|\\r/).filter(item => {\r\n            return item !== \"\";\r\n        });\r\n\r\n        const numSent = e.target.value.split(\".\").filter(item => {\r\n            return item !== \"\";\r\n        });\r\n\r\n\r\n        setchar(withOutSpace.length);\r\n        setcount(numWords.length);\r\n        setpara(numParas.length);\r\n        setsent(numSent.length);\r\n\r\n    };\r\n\r\n   \r\n\r\n\r\n    const hotkeys = (e) => {\r\n        \r\n        if(e.keyCode === 8 || e.keyCode === 46){\r\n            setdel(del+1);\r\n        }\r\n\r\n        \r\n\r\n        if(char === 0){\r\n            setdel(0)  \r\n        }\r\n\r\n        // if (del === 0){\r\n        //     alert(\"You have no backspace left!!\")\r\n        //     stop()\r\n        //     window.location.reload();      \r\n\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    var main_words = 300;\r\n    var cal = (count / main_words) * 100;\r\n    cal = cal | 0;\r\n\r\n    // function win_the_game() {\r\n    //     if (main_words === count) {\r\n    //         <div class=\"alert alert-success\" role=\"alert\">\r\n    //             A simple success alertâ€”check it out!\r\n    //         </div>\r\n    //         stop()\r\n    //     }\r\n    // }\r\n\r\n    const progress = () => {\r\n        var color = \"\"\r\n        if (cal <= 25) {\r\n            color = \"warning\"\r\n        }\r\n\r\n        if (cal > 25 && cal <= 50) {\r\n            color = \"info\"\r\n        }\r\n\r\n        if (cal > 50 && cal <= 75) {\r\n            color = \"primary\"\r\n        }\r\n\r\n        if (cal > 75 && cal <= 100) {\r\n            color = \"success\"\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"text_time\">\r\n\r\n            <div className=\"text_area\">\r\n                <textarea onKeyDown={hotkeys} onChange={getWordCount} class=\"form-control\" id=\"exampleFormControlTextarea1 myinput\" rows=\"15\"></textarea>\r\n                <div className=\"progress progress-lg\">\r\n                    <div className={`progress-bar bg-${progress()}`} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{ width: `${cal}%` }}></div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n   \r\n                <div className=\"main-section\">\r\n                    {/* <div class=\"btn-group me-2\" role=\"group\" aria-label=\"First group\">\r\n                        <button onChange={setten} type=\"button\" class=\"btn btn-outline-success\">10 min</button>\r\n                        <button onClick={settwenty} type=\"button\" class=\"btn btn-outline-info\">20 min</button>\r\n                        <button onClick={setthirty} type=\"button\" class=\"btn btn-outline-warning\">30 min</button>\r\n                        <button onClick={setforty} type=\"button\" class=\"btn btn-outline-danger\">40 min</button>\r\n                    </div> */}\r\n                    \r\n                    <div className=\"clock-holder\">\r\n                        <div className=\"stopwatch\">\r\n                            <Displaywatch time={time} />\r\n                            <Stopwatch_Btn status={status} resume={resume} reset={reset} stop={stop} start={start} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <h4 className=\"count_button\">Characters: {char} </h4> */}\r\n                    <h5 className=\"count_button\">Words: {count} </h5>\r\n                    <h5 className=\"count_button\">Sentences: {sent} </h5>\r\n                    <h5 className=\"count_button\">Paragraphs: {para} </h5>\r\n                    <h5 className=\"count_button\">Backspace used: {del}</h5>\r\n\r\n                </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text_time","import React from \"react\";\r\nimport \"./Api_fetch.css\"\r\nimport data from './data.json';\r\n\r\n\r\nfunction random_topics(length) {\r\n    return Math.floor(Math.random() * length);\r\n}\r\n\r\nfunction push() {\r\n    var x = data.topic[random_topics(data.topic.length)];\r\n    document.getElementById(\"change\").innerHTML = x;\r\n}\r\n\r\nfunction Api_fetch() {\r\n    return (\r\n        <div className=\"api_fetch\">\r\n            <div className=\"d-grid gap-2 col-6 mx-auto\">\r\n                <button onClick={push} className=\"btn btn-warning btn-block\">Choose Random Topic</button>\r\n            </div>\r\n            <div className=\"heading\">\r\n                {/* To switch directories, type <kbd>cd</kbd> followed by the name of the directory. */}\r\n                <h4 id=\"change\">_________</h4>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Api_fetch\r\n","import './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Text_time from './Text_time';\nimport Api_fetch from './Api_fetch';\n\n\n\n\n\nfunction App() {\n\n\n  return (\n\n    <div className=\"App\">\n\n      <h2>Essay Writing Practice </h2>\n      <Api_fetch />\n      <Text_time />\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}