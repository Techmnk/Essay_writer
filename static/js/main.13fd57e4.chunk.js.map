{"version":3,"sources":["Displaywatch.js","Stopwatch_Btn.js","Text_time.js","Api_fetch.js","App.js","reportWebVitals.js","index.js"],"names":["Displaywatch","props","time","h","m","s","ms","Stopwatch_Btn","status","className","onClick","start","stop","reset","resume","Text_time","useState","count","setcount","setTime","interv","setInterv","setStatus","run","setInterval","updatedMs","updatedS","updatedM","updatedH","counterstart","executed","onChange","e","numWords","target","value","split","filter","item","length","getWordCount","class","id","rows","color","progress","aria-valuenow","aria-valuemin","aria-valuemax","style","width","clearInterval","push","x","data","topic","Math","floor","random","document","getElementById","innerHTML","Api_fetch","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.13fd57e4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Displaywatch(props) {\r\n    const h = () => {\r\n        if (props.time.h === 0) {\r\n            return '';\r\n        } else {\r\n            return <span>{(props.time.h >= 10) ? props.time.h : \"0\" + props.time.h}</span>;\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {h()}&nbsp;&nbsp;\r\n            <span>{(props.time.m >= 10) ? props.time.m : \"0\" + props.time.m}</span>&nbsp;:&nbsp;\r\n            <span>{(props.time.s >= 10) ? props.time.s : \"0\" + props.time.s}</span>&nbsp;:&nbsp;\r\n            <span>{(props.time.ms >= 10) ? props.time.ms : \"0\" + props.time.ms}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Displaywatch;","import React from 'react';\r\n\r\nfunction Stopwatch_Btn(props) {\r\n    return (\r\n        <div>\r\n            {(props.status === 0) ?\r\n                <button className=\"stopwatch-btn btn btn-outline-info\"\r\n                    onClick={props.start}>Start</button> : \"\"\r\n            }\r\n\r\n            {(props.status === 1) ?\r\n                <div>\r\n                    <button className=\"stopwatch-btn btn btn-outline-danger\"\r\n                        onClick={props.stop}>Stop</button>\r\n                    <button className=\"stopwatch-btn btn btn-outline-warning\"\r\n                        onClick={props.reset}>Reset</button>\r\n                </div> : \"\"\r\n            }\r\n\r\n            {(props.status === 2) ?\r\n                <div>\r\n                    <button className=\"stopwatch-btn btn btn-outline-info\"\r\n                        onClick={props.resume}>Resume</button>\r\n                    <button className=\"stopwatch-btn btn btn-outline-warning\"\r\n                        onClick={props.reset}>Reset</button>\r\n                </div> : \"\"\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Stopwatch_Btn;","import React, { useState } from 'react';\r\nimport Displaywatch from './Displaywatch';\r\nimport Stopwatch_Btn from './Stopwatch_Btn';\r\nimport \"./Text_time.css\"\r\n\r\n\r\nfunction Text_time() {\r\n    const [count, setcount] = useState(0)\r\n    const [time, setTime] = useState({ ms: 0, s: 0, m: 0, h: 0 });\r\n    const [interv, setInterv] = useState();\r\n    const [status, setStatus] = useState(0);\r\n    // Not started = 0\r\n    // started = 1\r\n    // stopped = 2\r\n\r\n    const start = () => {\r\n        run();\r\n        setStatus(1);\r\n        setInterv(setInterval(run, 10));\r\n    };\r\n\r\n    var updatedMs = time.ms, updatedS = time.s, updatedM = time.m, updatedH = time.h;\r\n\r\n    const run = () => {\r\n        if (updatedM === 60) {\r\n            updatedH++;\r\n            updatedM = 0;\r\n        }\r\n        if (updatedS === 60) {\r\n            updatedM++;\r\n            updatedS = 0;\r\n        }\r\n        if (updatedMs === 100) {\r\n            updatedS++;\r\n            updatedMs = 0;\r\n        }\r\n        updatedMs++;\r\n        return setTime({ ms: updatedMs, s: updatedS, m: updatedM, h: updatedH });\r\n    };\r\n\r\n    const stop = () => {\r\n        clearInterval(interv);\r\n        setStatus(2);\r\n    };\r\n\r\n    const reset = () => {\r\n        clearInterval(interv);\r\n        setStatus(0);\r\n        setTime({ ms: 0, s: 0, m: 0, h: 0 })\r\n    };\r\n\r\n    const resume = () => start();\r\n\r\n\r\n\r\n    var counterstart = (function () {\r\n        var executed = false;\r\n        return function () {\r\n            if (!executed) {\r\n                executed = true;\r\n                if (count === 1) {\r\n                    start()\r\n\r\n                }\r\n            }\r\n        };\r\n    })();\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const getWordCount = (e) => {\r\n        const numWords = e.target.value.split(\" \").filter(item => {\r\n            return item !== \"\";\r\n        });\r\n        setcount(numWords.length);\r\n\r\n    };\r\n\r\n\r\n    const oncalls = e => {\r\n        counterstart()\r\n        getWordCount(e)\r\n    }\r\n\r\n    const progress = () => {\r\n        var color = \"\"\r\n        if (count <= 25) {\r\n            color = \"warning\"\r\n        }\r\n\r\n        if (count > 25 && count <= 50) {\r\n            color = \"info\"\r\n        }\r\n\r\n        if (count > 50 && count <= 75) {\r\n            color = \"primary\"\r\n        }\r\n\r\n        if (count > 75 && count <= 100) {\r\n            color = \"success\"\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"text_time\">\r\n            <div className=\"text_area\">\r\n                <textarea onChange={oncalls} class=\"form-control\" id=\"exampleFormControlTextarea1 myinput\" rows=\"15\"></textarea>\r\n                <p>{count}</p>\r\n                <div className=\"progress\">\r\n                    <div className={`progress-bar bg-${progress()}`} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{ width: `${count}%` }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div className=\"stop_watch\">\r\n                <div className=\"main-section\">\r\n                    <div className=\"clock-holder\">\r\n                        <div className=\"stopwatch\">\r\n                            <Displaywatch time={time} />\r\n                            <Stopwatch_Btn status={status} resume={resume} reset={reset} stop={stop} start={start} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text_time\r\n","import React from \"react\";\r\nimport \"./Api_fetch.css\"\r\nimport data from './data.json';\r\n\r\n\r\nfunction random_topics(length) {\r\n    return Math.floor(Math.random() * length);\r\n}\r\n\r\nfunction push() {\r\n    var x = data.topic[random_topics(data.topic.length)];\r\n    document.getElementById(\"change\").innerHTML = x;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Api_fetch() {\r\n    return (\r\n        <div>\r\n            <div className=\"d-grid gap-2 col-6 mx-auto\">\r\n                <button onClick={push} className=\"btn btn-warning\">Choose Random Topic</button>\r\n                <h1 id=\"change\">_________</h1>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Api_fetch\r\n","import './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Text_time from './Text_time';\nimport Api_fetch from './Api_fetch';\n\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>Essay Writing</h1>\n\n      <Api_fetch />\n      <Text_time />\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}